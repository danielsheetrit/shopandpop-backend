{"version":3,"sources":["services/storage.service.js","services/constances.service.js","store/reducers/product.reducer.js","store/store.js","services/http.service.js","services/cart.service.js","store/actions/product.action.js","components/ProductPreview.jsx","components/ProductList.jsx","components/AppFooter.jsx","components/Backdrop.jsx","components/ProductAmount.jsx","components/CheckoutPreview.jsx","components/Dashbored.jsx","firebase.js","routes.js","pages/ProductDetails.jsx","pages/ProductCategory.jsx","pages/ProductCheckout.jsx","pages/auth/Login.jsx","pages/Home.jsx","components/MaterialBadge.jsx","components/AppHeader.jsx","App.jsx","index.js"],"names":["storageService","loadFromStorage","key","val","localStorage","getItem","JSON","parse","saveToStorage","setItem","stringify","clearAllStorage","clear","KEY_DB","initialState","products","cart","currentUser","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","productModule","state","action","type","product","idx","findIndex","id","productId","slice","user","store","createStore","applyMiddleware","ReduxThunk","BASE_URL","httpService","get","endpoint","a","Axios","url","method","res","data","console","log","message","cartService","query","addProduct","removeProduct","clearStorage","params","unshift","length","find","prdct","productIdx","splice","getProducts","dispatch","error","saveProduct","setUser","eraseCart","ProductPreview","useDispatch","className","src","image","alt","title","category","price","onClick","handleAddition","to","ProductList","productsToShow","productsHeader","map","AppFooter","defaultProps","useStyles","makeStyles","theme","backdrop","zIndex","drawer","color","_Backdrop","isLoading","classes","Backdrop","open","CircularProgress","ProductAmount","handleClick","bool","amount","CheckoutPreview","previewSize","toUpperCase","Dashbored","handleLogout","useSelector","email","app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","setPersistence","Auth","Persistence","LOCAL","routes","path","component","useState","setProduct","setIsLoading","useParams","useEffect","fetchSingleProduct","description","setProducts","fixedCategory","fetchProducts","productsByCount","setProductsByCount","fixedCart","setFixedCart","totalPrice","setTotalPrice","useSnackbar","enqueueSnackbar","closeSnackbar","histroy","useHistory","getDuplicatedProducts","array","productsTitles","count","forEach","signOut","push","handleSnackbar","msg","variant","setTimeout","newCart","priceByAmount","makeFixedCart","toFixed","handlePurchase","isLogin","setIsLogin","setEmail","password","setPassword","handleChange","ev","target","name","value","preventDefault","signInWithEmailAndPassword","createUserWithEmailAndPassword","i","clearForm","login","onAuthStateChanged","onSubmit","handleSubmit","htmlFor","onChange","autoComplete","StyledBadge","withStyles","badge","right","top","Badge","MaterialBadge","numOfItems","badgeContent","showZero","AppHeader","hamburgerMode","setHamburgerMode","document","body","classList","add","remove","exact","activeClassName","icon","faTimes","faBars","size","App","route","ReactDOM","render","anchorOrigin","vertical","horizontal","TransitionComponent","Slide","preventDuplicate","maxSnack","getElementById"],"mappings":"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","file":"static/js/main.233ea06b.chunk.js","sourcesContent":["export const storageService = {\r\n    loadFromStorage,\r\n    saveToStorage,\r\n    clearAllStorage\r\n}\r\n\r\nfunction saveToStorage(key, val) {\r\n    localStorage.setItem(key, JSON.stringify(val))\r\n}\r\n\r\nfunction loadFromStorage(key) {\r\n    const val = localStorage.getItem(key)\r\n    return JSON.parse(val)\r\n}\r\n\r\nfunction clearAllStorage(key) {\r\n    localStorage.clear(key)\r\n}","//All globals are in a one file, for maximum debugging\r\n\r\nexport const heroImage = 'https://res.cloudinary.com/dvbojtbzc/image/upload/v1629984131/milkhoney/shop-hero_dsqfch.svg'\r\nexport const emptyCartImg = 'https://res.cloudinary.com/dvbojtbzc/image/upload/v1630058584/milkhoney/empty_wa3q4o.svg'\r\nexport const KEY_DB = 'cartdb'\r\n\r\n","import { storageService } from '../../services/storage.service'\r\nimport { KEY_DB } from '../../services/constances.service'\r\n\r\nconst initialState = {\r\n    products: [],\r\n    cart: storageService.loadFromStorage(KEY_DB) || [],\r\n    currentUser: null\r\n}\r\n\r\nexport function productReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_PRODUCTS':\r\n            return { ...state, products: action.products }\r\n        case 'ADD_PRODUCT':\r\n            return { ...state, cart: [action.product, ...state.cart] }\r\n        case 'REMOVE_PRODUCT':\r\n            const idx = state.cart.findIndex(product => product.id === action.productId)\r\n            return {\r\n                ...state, cart: [\r\n                    ...state.cart.slice(0, idx),\r\n                    ...state.cart.slice(idx + 1)\r\n                ]\r\n            }\r\n        case 'SET_USER':\r\n            return { ...state, currentUser: action.user }\r\n        case 'ERASE_CART':\r\n            return { ...state, cart: [] }\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, applyMiddleware, combineReducers, compose } from 'redux'\r\nimport ReduxThunk from 'redux-thunk'\r\nimport { productReducer } from './reducers/product.reducer'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst rootReducer = combineReducers({\r\n    productModule: productReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(ReduxThunk)))","import Axios from 'axios'\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\nexport const httpService = {\r\n    get\r\n}\r\n\r\nexport async function get(endpoint) {\r\n\r\n    try {\r\n        const res = await Axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method: 'get',\r\n        })\r\n        return res.data\r\n    } catch (e) {\r\n        console.log('Http service: error in', e.message);\r\n    }\r\n    \r\n}","import { httpService } from './http.service'\r\nimport { storageService } from './storage.service'\r\nimport { KEY_DB } from './constances.service'\r\n\r\nexport const cartService = {\r\n    query,\r\n    addProduct,\r\n    removeProduct,\r\n    clearStorage\r\n}\r\n\r\nasync function query(params) {\r\n    try {\r\n        const res = await httpService.get(params)\r\n        return res\r\n    } catch (err) {\r\n        console.log('product service: issues with get requset', err)\r\n    }\r\n}\r\n\r\nasync function addProduct(product) {\r\n    let cart = await storageService.loadFromStorage(KEY_DB) || []\r\n    cart.unshift(product)\r\n    storageService.saveToStorage(KEY_DB, cart)\r\n}\r\n\r\nasync function removeProduct(productId) {\r\n    let cart = await storageService.loadFromStorage(KEY_DB) || []\r\n    if (cart.length > 0) {\r\n        const product = cart.find(prdct => prdct.id === productId)\r\n        const productIdx = cart.findIndex(prdct => prdct === product);\r\n        cart.splice(productIdx, 1)\r\n        storageService.saveToStorage(KEY_DB, cart)\r\n    }\r\n}\r\n\r\nasync function clearStorage() {\r\n    storageService.clearAllStorage(KEY_DB)\r\n}","import { cartService } from '../../services/cart.service'\r\n\r\nexport function getProducts(params) {\r\n    return async dispatch => {\r\n        try {\r\n            const products = await cartService.query(params)\r\n            dispatch({ type: 'SET_PRODUCTS', products })\r\n            return products\r\n        } catch (err) {\r\n            console.error('Products Action: err in getProducts', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function saveProduct(product) {\r\n    return async dispatch => {\r\n        try {\r\n            const res = dispatch({ type: 'ADD_PRODUCT', product: product })\r\n            return res\r\n        } catch (err) {\r\n            console.error('Products Action: err in saveProducts', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeProduct(productId) {\r\n    return async dispatch => {\r\n        try {\r\n            const res = dispatch({ type: 'REMOVE_PRODUCT', productId })\r\n            return res\r\n        } catch (err) {\r\n            console.error('Product Actions: err in removeProducts', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function setUser(user) {\r\n    return async dispatch => {\r\n        try {\r\n            const res = dispatch({ type: 'SET_USER', user })\r\n            return res\r\n        } catch (err) {\r\n            console.error('Product Actions: err in Setting user', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function eraseCart() {\r\n    return async dispatch => {\r\n        try {\r\n            const res = dispatch({ type: 'ERASE_CART' })\r\n            return res\r\n        } catch (err) {\r\n            console.error('Product Actions: err in erase_cart', err)\r\n        }\r\n    }\r\n}\r\n","import { Link } from 'react-router-dom'\r\n\r\nimport { useDispatch } from 'react-redux'\r\nimport { saveProduct } from '../store/actions/product.action'\r\n\r\nimport { cartService } from '../services/cart.service'\r\n\r\nexport function ProductPreview({ product }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    async function handleAddition(product) {\r\n        try {\r\n            //In general we will make a call for the DB, \r\n            //and then render the changes.\r\n            //but since we working with LocalStorage its ok too..\r\n            const res = await dispatch(saveProduct(product))\r\n            cartService.addProduct(res.product)\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"product-preview flex column align-center\">\r\n            <div className=\"preview-image\">\r\n                <img src={product.image} alt={product.title} />\r\n            </div>\r\n\r\n            <h4>{`${product.title.slice(0, 20)}...`}</h4>\r\n\r\n            <span>{product.category}</span>\r\n            <span>{`$${product.price}`}</span>\r\n\r\n            <div className=\"preview-linkbox flex align-center\">\r\n                <button\r\n                    onClick={() => handleAddition(product)}\r\n                >\r\n                    Add to cart</button>\r\n                <Link to={`/details/${product.id}`}>Details</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { ProductPreview } from './ProductPreview'\r\n\r\nexport function ProductList({ products, productsToShow, productsHeader }) {\r\n\r\n    return <div className=\"product-list\">\r\n        <h2>{`${productsHeader}`}</h2>\r\n        <div className=\"product-list-grid\">\r\n            {products.slice(0, productsToShow).map(product => {\r\n                return <ProductPreview\r\n                    key={product.id}\r\n                    product={product}\r\n                />\r\n            })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nProductList.defaultProps = {\r\n    productsToShow: 20,\r\n    productsHeader: 'Our latest products'\r\n}","export function AppFooter() {\r\n    return (\r\n        <footer className=\"flex column justify-center align-center\">\r\n            <i>By Daniel Dev</i>\r\n        </footer>\r\n    )\r\n}\r\n","import Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#6F00FF',\r\n    },\r\n}));\r\n\r\nexport default function _Backdrop({ isLoading }) {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Backdrop\r\n                className={classes.backdrop}\r\n                open={isLoading}\r\n            >\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n        </div>\r\n    );\r\n}","import { useDispatch } from 'react-redux'\r\n\r\nimport { saveProduct, removeProduct } from '../store/actions/product.action'\r\nimport { cartService } from '../services/cart.service'\r\n\r\nexport function ProductAmount({ product }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    async function handleClick(bool, product) {\r\n        if (bool) {\r\n            const res = await dispatch(saveProduct(product))\r\n            cartService.addProduct(res.product)\r\n        } else {\r\n            const res = await dispatch(removeProduct(product.id))\r\n            cartService.removeProduct(res.productId)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"product-amount flex align-center\">\r\n            <button\r\n                onClick={() => {\r\n                    handleClick(false, product)\r\n                }}\r\n            >\r\n                -\r\n            </button>\r\n            <span>{product.amount}</span>\r\n            <button\r\n                onClick={() => {\r\n                    handleClick(true, product)\r\n                }}\r\n            >\r\n                +\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import { ProductAmount } from './ProductAmount'\r\n\r\nexport function CheckoutPreview({ cart, previewSize }) {\r\n\r\n    return (\r\n        <div>\r\n            {cart.map(product => {\r\n                return <div\r\n                    key={product.id}\r\n                    className={`${previewSize} flex`}\r\n                >\r\n                    <div className=\"checkout-preview-img\">\r\n                        <img\r\n                            src={product.image}\r\n                            alt={product.title}\r\n                        />\r\n                    </div>\r\n                    <div className=\"checkout-preview-header\">\r\n                        <h3>{product.title}</h3>\r\n                        <p>{product.category.toUpperCase()}</p>\r\n                        <ProductAmount  product={product} />\r\n                    </div>\r\n                </div>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nCheckoutPreview.defaultProps = {\r\n    previewSize: 'large-preview'\r\n}","import { useSelector } from 'react-redux'\r\n\r\nexport function Dashbored({ handleLogout }) {\r\n\r\n    const user = useSelector(state => state.productModule.currentUser)\r\n\r\n    return (\r\n        <section className=\"dashbored\">\r\n            <h1>Dashbored</h1>\r\n            {user && <article className=\"flex column\">\r\n                <span>Email: {user.email}</span>\r\n                <button onClick={() => {\r\n                    handleLogout()\r\n                }} >\r\n                    Log out\r\n                </button>\r\n            </article>}\r\n        </section>\r\n    )\r\n}\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth'\r\n\r\nconst app = firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\r\n})\r\n\r\napp.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL)\r\n\r\nexport const auth = app.auth()\r\nexport default app","import { Home } from './pages/Home'\r\nimport { ProductCategory } from './pages/ProductCategory'\r\nimport { ProductDetails } from './pages/ProductDetails'\r\nimport { ProductCheckout } from './pages/ProductCheckout'\r\nimport { Login } from './pages/auth/Login'\r\n\r\nexport const routes = [\r\n    {\r\n        path: '/details/:id',\r\n        component: ProductDetails\r\n    },\r\n    {\r\n        path: '/categories/:category',\r\n        component: ProductCategory\r\n    },\r\n    {\r\n        path: '/checkout',\r\n        component: ProductCheckout\r\n    },\r\n    {\r\n        path: '/auth/:login',\r\n        component: Login\r\n    },\r\n    {\r\n        path: '/',\r\n        component: Home\r\n    },\r\n]","import { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router'\r\n\r\nimport { useDispatch } from 'react-redux'\r\nimport { saveProduct } from '../store/actions/product.action'\r\n\r\nimport { cartService } from '../services/cart.service'\r\nimport { AppFooter } from '../components/AppFooter'\r\n\r\nimport Backdrop from '../components/Backdrop'\r\n\r\nexport function ProductDetails() {\r\n\r\n    const [product, setProduct] = useState(null)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const { id } = useParams()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        fetchSingleProduct(id)\r\n    }, [])\r\n\r\n    async function handleAddition(product) {\r\n        const res = await dispatch(saveProduct(product))\r\n        cartService.addProduct(res.product)\r\n    }\r\n\r\n    async function fetchSingleProduct(id) {\r\n        setIsLoading(true)\r\n        const product = await cartService.query(`product/${id}`)\r\n        setProduct(product)\r\n        setIsLoading(false)\r\n    }\r\n\r\n    return (!isLoading ?\r\n        <section className=\"product-details container\">\r\n            <div>\r\n                {product && <div\r\n                    className=\"details-main flex align-center justify-space-between\"\r\n                >\r\n                    <div className=\"details-image\">\r\n                        <img src={product.image} alt={product.title} />\r\n                    </div>\r\n                    <div\r\n                        className=\"details-header flex column\"\r\n                    >\r\n                        <h2>{product.title}</h2>\r\n                        <span>{product.category.toUpperCase()}</span>\r\n                        <p>{product.description}</p>\r\n                        <span>{`$${product.price}`}</span>\r\n\r\n                        <button\r\n                            onClick={() => handleAddition(product)}\r\n                        >\r\n                            Add to cart</button>\r\n                    </div>\r\n                </div>}\r\n                <AppFooter />\r\n            </div>\r\n        </section>\r\n        : <Backdrop isLoading={isLoading} />)\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router'\r\n\r\nimport { cartService } from '../services/cart.service'\r\nimport { ProductList } from '../components/ProductList'\r\nimport { AppFooter } from '../components/AppFooter'\r\n\r\nimport Backdrop from '../components/Backdrop'\r\n\r\nexport function ProductCategory() {\r\n\r\n    const [products, setProducts] = useState([])\r\n    const { category } = useParams()\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n        fetchProducts()\r\n    }, [category])\r\n\r\n    async function fetchProducts() {\r\n        setIsLoading(true)\r\n        const fixedCategory = `products/${category}`;\r\n        const products = await cartService.query(fixedCategory)\r\n        setProducts(products)\r\n        setIsLoading(false)\r\n    }\r\n\r\n    return (!isLoading ?\r\n        <section className=\"category container\">\r\n            {products &&\r\n                <div>\r\n                    <ProductList\r\n                        products={products}\r\n                        productsHeader={category}\r\n                    />\r\n                    <AppFooter />\r\n                </div>}\r\n        </section>\r\n        : <Backdrop isLoading={isLoading} />)\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router'\r\n\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { setUser, eraseCart } from '../store/actions/product.action'\r\n\r\nimport { CheckoutPreview } from '../components/CheckoutPreview'\r\nimport { AppFooter } from '../components/AppFooter'\r\nimport { Dashbored } from '../components/Dashbored'\r\n\r\nimport { emptyCartImg } from '../services/constances.service'\r\nimport { cartService } from '../services/cart.service'\r\n\r\nimport { auth } from '../firebase'\r\nimport { useSnackbar } from 'notistack'\r\n\r\nexport function ProductCheckout() {\r\n\r\n    const [productsByCount, setProductsByCount] = useState(null)\r\n    const [fixedCart, setFixedCart] = useState([])\r\n    const [totalPrice, setTotalPrice] = useState(null)\r\n\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n    const cart = useSelector(state => state.productModule.cart)\r\n    const dispatch = useDispatch()\r\n    const histroy = useHistory()\r\n\r\n    useEffect(() => {\r\n        getDuplicatedProducts(cart)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getDuplicatedProducts(cart)\r\n    }, [cart])\r\n\r\n    useEffect(() => {\r\n        if (productsByCount) {\r\n            makeFixedCart(productsByCount)\r\n        }\r\n    }, [productsByCount])\r\n\r\n    function getDuplicatedProducts(array) {\r\n        //find if there is any repeating elemnts in the array\r\n        const productsTitles = array.map(product => product.title)\r\n        const count = {}\r\n        productsTitles.forEach(product => {\r\n            if (count[product]) {\r\n                count[product] += 1\r\n                return\r\n            }\r\n            count[product] = 1\r\n        });\r\n        setProductsByCount(count)\r\n    }\r\n\r\n    function makeFixedCart(productsByCount) {\r\n        // find the right product, then pushing the amount of times it orderd,\r\n        //and than render the value to the component, and use the value\r\n        // to calculate the total price\r\n        const newCart = []\r\n        let totalPrice = 0;\r\n\r\n        for (const key in productsByCount) {\r\n            let product = cart.find(prdct => prdct.title === key)\r\n            if (key === product.title) {\r\n                product.amount = productsByCount[key]\r\n                product.priceByAmount = product.amount * product.price\r\n                totalPrice += product.priceByAmount\r\n            }\r\n            newCart.push(product)\r\n        }\r\n        setFixedCart(newCart)\r\n        setTotalPrice(totalPrice)\r\n    }\r\n\r\n    async function handleLogout() {\r\n        try {\r\n            await auth.signOut()\r\n            dispatch(setUser(null))\r\n            histroy.push('/login')\r\n            handleSnackbar('You have successfully logged out.', 'success')\r\n        } catch (err) {\r\n            console.log('faild to log out', err);\r\n            handleSnackbar('Had problem logging you out.', 'error')\r\n        }\r\n    }\r\n\r\n    function handleSnackbar(msg, variant) {\r\n        enqueueSnackbar(`${msg}`, { variant: variant });\r\n        setTimeout(() => closeSnackbar(), 4000)\r\n    }\r\n\r\n    async function handlePurchase() {\r\n        await cartService.clearStorage()\r\n        dispatch(eraseCart())\r\n        histroy.push('/')\r\n        handleSnackbar('Purchase successfully', 'success')\r\n    }\r\n\r\n    return (\r\n        <div className=\"product-checkout container\">\r\n            <div className=\"checkout-main\">\r\n\r\n                <Dashbored handleLogout={handleLogout} />\r\n\r\n                <div className=\"checkout-header\">\r\n                    <h2>Order summary</h2>\r\n                </div>\r\n\r\n                {fixedCart.length ?\r\n                    <div>\r\n                        <CheckoutPreview\r\n                            cart={fixedCart}\r\n                        />\r\n                        <div\r\n                            className=\"prices-box flex align-center justify-space-between\"\r\n                        >\r\n                            {totalPrice && <span>Total price: ${totalPrice.toFixed(2)}</span>}\r\n                            <button\r\n                                onClick={() => handlePurchase()}\r\n                            >\r\n                                Complete oreder</button>\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <section className=\"empty-msg-container flex column align-center\">\r\n                        <h2 className=\"empty-msg\">Shopping cart is empty</h2>\r\n                        <div className=\"empty-cart-img\">\r\n                            <img src={emptyCartImg} alt=\"empty-cart-img\" />\r\n                        </div>\r\n                    </section>}\r\n\r\n                <AppFooter />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useState, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\n\r\nimport { auth } from '../../firebase'\r\n\r\nimport { useDispatch } from 'react-redux'\r\nimport { setUser } from '../../store/actions/product.action'\r\n\r\nimport { useSnackbar } from 'notistack'\r\n\r\nexport function Login() {\r\n\r\n    const [isLogin, setIsLogin] = useState(true)\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n    const dispatch = useDispatch()\r\n    const histroy = useHistory()\r\n    const params = useParams()\r\n\r\n    useEffect(() => {\r\n        if (!params.login) setIsLogin(false)\r\n        const unSubscribe = auth.onAuthStateChanged(user => {\r\n            dispatch(setUser(user))\r\n        })\r\n        return unSubscribe\r\n    }, [])\r\n\r\n    function handleChange(ev) {\r\n        if (ev.target.name === 'email') {\r\n            setEmail(ev.target.value)\r\n        } else {\r\n            setPassword(ev.target.value)\r\n        }\r\n    }\r\n\r\n    async function handleSubmit(ev) {\r\n        ev.preventDefault()\r\n\r\n        try {\r\n            if (isLogin) {\r\n                const res = await auth.signInWithEmailAndPassword(email, password)\r\n                dispatch(setUser(res.user))\r\n                handleSnackbar('You are now logged in!', 'success')\r\n            } else {\r\n                const res = auth.createUserWithEmailAndPassword(email, password)\r\n                dispatch(setUser(res.i.user))\r\n                handleSnackbar('Welcome! we already logged you in', 'success')\r\n            }\r\n            histroy.push('/')\r\n\r\n        } catch (err) {\r\n            console.log('faild to login', err);\r\n            handleSnackbar('Failed to login, try again.', 'error')\r\n\r\n        } finally {\r\n            clearForm()\r\n        }\r\n    }\r\n\r\n    function handleSnackbar(msg, variant) {\r\n        enqueueSnackbar(`${msg}`, { variant: variant });\r\n        setTimeout(() => closeSnackbar(), 4000)\r\n    }\r\n\r\n    function clearForm() {\r\n        setEmail('')\r\n        setPassword('')\r\n    }\r\n\r\n    return (\r\n        <section className=\"login container\">\r\n            <div className=\"flex column align-center\">\r\n                <h2>{isLogin ? 'Log in' : 'Sign up'} </h2>\r\n                <form\r\n                    onSubmit={(ev) => handleSubmit(ev)}\r\n                >\r\n                    <div className=\"flex column input-container\">\r\n                        <label htmlFor=\"email-id\">Email</label>\r\n                        <input\r\n                            value={email}\r\n                            id=\"email-id\"\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            onChange={(ev) => handleChange(ev)}\r\n                            autoComplete\r\n                        />\r\n                    </div>\r\n                    <div className=\"flex column input-container\">\r\n                        <label htmlFor=\"password-id\">Password</label>\r\n                        <input\r\n                            value={password}\r\n                            id=\"password-id\"\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            onChange={(ev) => handleChange(ev)}\r\n                            autoComplete \r\n                        />\r\n                    </div>\r\n                    <button>{isLogin ? 'Log in' : 'Sign up'}</button>\r\n                </form>\r\n\r\n                <div className=\"signup-login-suggest\">\r\n                    <p>\r\n                        {isLogin ? 'Not have an account yet?' : 'Already have an account?'}\r\n                        <button\r\n                            onClick={() => setIsLogin(!isLogin)}\r\n                        >\r\n                            {isLogin ? 'Sign up' : 'Log in'}\r\n                        </button>\r\n                    </p>\r\n                </div>\r\n\r\n            </div>\r\n        </section>\r\n    )\r\n}","import { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getProducts } from '../store/actions/product.action'\r\n\r\nimport { heroImage } from '../services/constances.service'\r\nimport { ProductList } from '../components/ProductList'\r\nimport { AppFooter } from '../components/AppFooter'\r\nimport Backdrop from '../components/Backdrop'\r\n\r\nexport function Home() {\r\n\r\n    const products = useSelector(state => state.productModule.products)\r\n    const dispatch = useDispatch()\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n        fetchProducts()\r\n    }, [])\r\n\r\n    async function fetchProducts() {\r\n        setIsLoading(true)\r\n        await dispatch(getProducts('products/explore'))\r\n        setIsLoading(false)\r\n    }\r\n\r\n    return (!isLoading ?\r\n        <section className=\"home container\">\r\n            <div className=\"hero-container flex align-center justify-space-between\">\r\n                \r\n                <div className=\"hero-img flex justify-center\">\r\n                    <img src={heroImage} alt=\"Milk&honey logo\" />\r\n                </div>\r\n                <div className=\"hero-title\">\r\n                    <h1>Welcome to Shop & pop</h1>\r\n                    <p>\r\n                        We’re a local shop to everything you desire. <br />\r\n                        Located in one of Olympus’s up and coming neighborhoods,<br />\r\n                        we are part of the city fabric, among entrepreneurs and innovators.\r\n                    </p>\r\n                        <Link to=\"/categories/explore\">\r\n                            Start shopping\r\n                        </Link>\r\n                </div>\r\n            </div>\r\n            {products && <ProductList\r\n                products={products}\r\n                productsToShow=\"8\"\r\n            />}\r\n            <AppFooter />\r\n        </section>\r\n        : <Backdrop isLoading={isLoading} />)\r\n}","import Badge from '@material-ui/core/Badge';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\n\r\nconst StyledBadge = withStyles((theme) => ({\r\n    badge: {\r\n        right: -3,\r\n        top: 7,\r\n    },\r\n}))(Badge);\r\n\r\nexport function MaterialBadge({ numOfItems }) {\r\n   \r\n    return (\r\n        <StyledBadge\r\n            badgeContent={numOfItems}\r\n            color=\"secondary\"\r\n            showZero\r\n        >\r\n            <ShoppingCartIcon />\r\n        </StyledBadge>\r\n    );\r\n}","import { NavLink, Link } from 'react-router-dom'\r\nimport { useState, useEffect } from 'react'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setUser } from '../store/actions/product.action'\r\n\r\nimport { auth } from '../firebase'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes, faBars } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { MaterialBadge } from './MaterialBadge'\r\n\r\nexport function AppHeader() {\r\n\r\n    const [hamburgerMode, setHamburgerMode] = useState(false)\r\n\r\n    const cart = useSelector(state => state.productModule.cart)\r\n    const currentUser = useSelector(state => state.productModule.currentUser)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (hamburgerMode) document.body.classList.add('hamburger-mode')\r\n        else document.body.classList.remove('hamburger-mode')\r\n    }, [hamburgerMode])\r\n\r\n    useEffect(() => {\r\n        const unSubscribe = auth.onAuthStateChanged(user => {\r\n            dispatch(setUser(user))\r\n        })\r\n        return unSubscribe\r\n    }, [])\r\n\r\n    return (\r\n        <header className=\"container\">\r\n            <nav>\r\n                <div className=\"logo\">\r\n                    <h1>\r\n                        <NavLink to=\"/\">SHOP&POP</NavLink>\r\n                    </h1>\r\n                </div>\r\n                <div className=\"header-links\">\r\n                    <NavLink\r\n                        onClick={() => setHamburgerMode(false)}\r\n                        exact\r\n                        activeClassName=\"selected\"\r\n                        to=\"/\"\r\n                    >Home</NavLink>\r\n\r\n                    <NavLink\r\n                        onClick={() => setHamburgerMode(false)}\r\n                        activeClassName=\"selected\"\r\n                        to=\"/categories/men's clothing\"\r\n                    >Mens</NavLink>\r\n\r\n                    <NavLink\r\n                        onClick={() => setHamburgerMode(false)}\r\n                        activeClassName=\"selected\"\r\n                        to=\"/categories/women's clothing\"\r\n                    >Women</NavLink>\r\n\r\n                    <NavLink\r\n                        onClick={() => setHamburgerMode(false)}\r\n                        activeClassName=\"selected\"\r\n                        to=\"/categories/jewelery\"\r\n                    >Jewelery</NavLink>\r\n\r\n                    <NavLink\r\n                        onClick={() => setHamburgerMode(false)}\r\n                        activeClassName=\"selected\"\r\n                        to=\"/categories/electronics\"\r\n                    >Electronics</NavLink>\r\n\r\n                    <NavLink\r\n                        onClick={() => setHamburgerMode(false)}\r\n                        activeClassName=\"selected\"\r\n                        to=\"/categories/explore\"\r\n                    >Explore</NavLink>\r\n                </div>\r\n\r\n                <div className=\"header-cart\">\r\n                    {currentUser ? <Link to=\"/checkout\">Dashbored\r\n                        <MaterialBadge\r\n                            numOfItems={cart.length}\r\n                        />\r\n                    </Link> : <Link className=\"login-btn\" to='/auth/login'>Log in</Link> }\r\n                </div>\r\n\r\n                <div\r\n                    className=\"hamburger\"\r\n                    onClick={() => setHamburgerMode(!hamburgerMode)}\r\n                >\r\n                    <FontAwesomeIcon\r\n                        icon={hamburgerMode ? faTimes : faBars}\r\n                        size=\"2x\"\r\n                    />\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    )\r\n}","import './assets/css/styles.scss'\n\nimport { Route, Switch } from 'react-router-dom'\nimport { routes } from './routes'\n\nimport { AppHeader } from './components/AppHeader'\n\nexport function App() {\n  return (\n    <div className=\"App\">\n      <AppHeader />\n      <Switch>\n        {routes.map(route =>\n          <Route\n            key={route.path}\n            component={route.component}\n            path={route.path} />)}\n      </Switch>\n    </div>\n  );\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { HashRouter as Router } from 'react-router-dom'\n\nimport { Provider } from 'react-redux'\nimport { store } from './store/store'\n\nimport { SnackbarProvider } from 'notistack'\nimport Slide from '@material-ui/core/Slide'\n\nimport { App } from './App'\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <SnackbarProvider\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        TransitionComponent={Slide}\n        preventDuplicate\n        maxSnack={1}\n      >\n        <App />\n      </SnackbarProvider>\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}